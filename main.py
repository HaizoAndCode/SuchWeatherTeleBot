from telebot import types
import telebot
import requests
import json



# token and api
bot = telebot.TeleBot('6633026516:AAGlb9qRIx0nJwnNhCiTxehPrCMWdMlAYDE')
API = 'e9841484cb023bf0bd8df2bfeeeb7478'
# 
city_names = [
    "–ú–æ—Å–∫–≤–∞",
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
    # Add more city names here
]

keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
for city_name in city_names:
    button = types.KeyboardButton(city_name)
    keyboard.add(button)


# Start
@bot.message_handler(commands = ['start'])
def start(message):
    bot.send_message(message.chat.id, f'Hello, {message.from_user.first_name}! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –≥–æ—Ä–æ–¥–æ–≤ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞.', reply_markup=keyboard)

weather_translations = {
    "clear sky": "—è—Å–Ω–æ–µ –Ω–µ–±–æ",
    "few clouds": "–Ω–µ–º–Ω–æ–≥–æ –æ–±–ª–∞—á–Ω–æ",
    "scattered clouds": "—Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞",
    # –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}


@bot.message_handler(content_types=['text'])


def get_weather(message):
    city = message.text.strip().lower()
    res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API}&units=metric')
    data = res.json()

    if "name" in data:
        description = data["weather"][0]["description"]
        temperature = data["main"]["temp"]
        wind_speed = data["wind"]["speed"]

        if description in weather_translations:
            translated_description = weather_translations[description]
            bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: {temperature}¬∞C, {translated_description}. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å')
        else:
            bot.reply_to(message, f'–°–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞: {temperature}¬∞C, {description}. –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å')
    else:
        bot.reply_to(message, '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω')



@bot.message_handler(content_types=['photo'])
def grt_photo(message):
    markup = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç markup –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
    btn2 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', callback_data='delet1')
    btn3 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ', callback_data='delete0')
    markup.row(btn2, btn3)
    bot.reply_to(message, '–ú–Ω–µ –Ω–µ –Ω—É–∂–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. üòÖ', reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'delete0':
        bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)  # –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.delete_message(callback.message.chat.id, callback.message.message_id)  # –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    elif callback.data == 'delet1':
        bot.delete_message(callback.message.chat.id, callback.message.message_id)  # –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ









bot.polling(none_stop=True)